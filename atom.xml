<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Maintel-编程记</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://maintel.github.io/"/>
  <updated>2017-06-25T02:59:55.675Z</updated>
  <id>https://maintel.github.io/</id>
  
  <author>
    <name>Maintel</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git使用笔记</title>
    <link href="https://maintel.github.io//blog/2017/06/git%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0.html"/>
    <id>https://maintel.github.io//blog/2017/06/git使用笔记.html</id>
    <published>2017-06-23T08:06:05.000Z</published>
    <updated>2017-06-25T02:59:55.675Z</updated>
    
    <content type="html"><![CDATA[<p>平时工作git使用过程中的一些常用命令，或者遇到的一些问题，留作记录。</p>
<a id="more"></a>
<h1 id="切换账户"><a href="#切换账户" class="headerlink" title="切换账户"></a>切换账户</h1><h2 id="不用ssh切换账号"><a href="#不用ssh切换账号" class="headerlink" title="不用ssh切换账号"></a>不用ssh切换账号</h2><ul>
<li><p>查看本地的用户及邮箱</p>
<p>  <code>git config user.name</code></p>
<p>  <code>git config user.email</code></p>
</li>
<li><p>修改账户</p>
<p>  <code>git config --global user.name &quot;username&quot;</code></p>
<p>  <code>git config --global user.email &quot;email&quot;</code></p>
</li>
</ul>
<h1 id="新建、切换、合并分支"><a href="#新建、切换、合并分支" class="headerlink" title="新建、切换、合并分支"></a>新建、切换、合并分支</h1><ul>
<li><p>新建分支</p>
<p>  <code>git branch xxx</code></p>
</li>
<li><p>切换分支</p>
<p>  <code>git checkout xxx</code></p>
</li>
</ul>
<p>上面两条命令可以用一条命令实现<strong>新建并切换分支</strong></p>
<p> <code>git checkout -b xxx</code></p>
<ul>
<li><p>合并分支</p>
<p> 首先切换到需要合并到的分支，执行</p>
<p> <code>git merge xxx</code> xxx是需要合并过来的分支名</p>
</li>
</ul>
<h1 id="发生冲突"><a href="#发生冲突" class="headerlink" title="发生冲突"></a>发生冲突</h1><h2 id="内容冲突"><a href="#内容冲突" class="headerlink" title="内容冲突"></a>内容冲突</h2><p>出现冲突时会出现<strong>CONFLICT</strong>字样，而且此时分支并不是在某一分支而是在<strong>master|MERGING</strong>；</p>
<p><img src="http://orzoelfvh.bkt.clouddn.com/git%20%E5%90%88%E5%B9%B6%E5%86%B2%E7%AA%81.png?attname=&amp;e=1498205923&amp;token=cs2nCfx72Y7hW0_NpFYzb3Jab90IJWraRtphMd-q:p3zSW1cLxlaHROLLVYT_o1v_ym4" alt="git 内容冲突"></p>
<p>最简单的解决办法是查看冲突的文件，例如上图为<em>git test.txt</em>,打开后可以发现：</p>
<p><img src="http://orzoelfvh.bkt.clouddn.com/git%E5%86%85%E5%AE%B9%E5%86%B2%E7%AA%81%E5%86%85%E5%AE%B9.png?attname=&amp;e=1498206071&amp;token=cs2nCfx72Y7hW0_NpFYzb3Jab90IJWraRtphMd-q:RLFdtKpKUIQVFYWOMg4mos0kllA" alt="git 内容冲突内容"></p>
<p><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>和<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code> 中间就是发生冲突的地方，此时直接编辑冲突文件，然后把<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>和<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>以及中间的等号删除，然后再执行命令<code>git add .</code>以及<code>git commit -m &#39;注释&#39;</code>就解决了冲突。</p>
<h1 id="发生Please-enter-a-commit-message-to-explain-why-this-merge-is-necessary"><a href="#发生Please-enter-a-commit-message-to-explain-why-this-merge-is-necessary" class="headerlink" title="发生Please enter a commit message to explain why this merge is necessary."></a>发生Please enter a commit message to explain why this merge is necessary.</h1><p>这句话的意思就是需要提交消息解释为什么合并是必要的。</p>
<p>此时会弹出VIM界面如图：</p>
<p><img src="http://orzoelfvh.bkt.clouddn.com/%E5%90%88%E5%B9%B6%E5%86%B2%E7%AA%81%E5%87%BA%E7%8E%B0vim.jpg?attname=&amp;e=1498206503&amp;token=cs2nCfx72Y7hW0_NpFYzb3Jab90IJWraRtphMd-q:SoFxxTDV6yk_odh48Ke-EsqRjEY" alt="合并冲出出现vim界面"></p>
<p>此时可以做如下操作</p>
<ul>
<li><p>按键盘字母 i 进入insert模式</p>
</li>
<li><p>修改最上面那行黄色合并信息,可以不修改</p>
</li>
<li><p>按键盘左上角”Esc”</p>
</li>
<li><p>输入”:wq”,注意是冒号+wq,按回车键即可</p>
</li>
</ul>
<p>退出这个界面的话按<code>ctrl + z</code>；</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;平时工作git使用过程中的一些常用命令，或者遇到的一些问题，留作记录。&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="https://maintel.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://maintel.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo+GitHub Pages搭建个人博客2</title>
    <link href="https://maintel.github.io//blog/2017/04/hexo%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98.html"/>
    <id>https://maintel.github.io//blog/2017/04/hexo使用过程中的一些问题.html</id>
    <published>2017-04-23T08:44:48.000Z</published>
    <updated>2017-06-25T02:59:55.675Z</updated>
    
    <content type="html"><![CDATA[<p>本篇主要记录在使用Hexo部署博客过程主题设置，以及一些技巧等。</p>
<a id="more"></a>
<h1 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h1><p>本博客使用的是<code>next</code>主题，希望详细了解的同学可以参看<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">next官方网站</a>。</p>
<h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>在博客源码根目录下执行：</p>
<blockquote>
<p>git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">https://github.com/iissnan/hexo-theme-next</a> themes/next</p>
</blockquote>
<h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><p>在根目录下找到<code>_config.yml</code>配置文件，找到<code>theme</code>字段，并将其值更改为<code>next</code>，如下所示：</p>
<blockquote>
<p>theme: next</p>
</blockquote>
<h2 id="设置RSS"><a href="#设置RSS" class="headerlink" title="设置RSS"></a>设置RSS</h2><p>进入<code>themes</code>-<code>next</code>文件夹，找到<code>_config.yml</code>配置文件，在里面添加：</p>
<blockquote>
<p>rss:</p>
</blockquote>
<h2 id="添加标签tags页面"><a href="#添加标签tags页面" class="headerlink" title="添加标签tags页面"></a>添加标签tags页面</h2><p>使用命令行定位到根目录下，使用如下命令新建一个页面，命名为<code>tags</code>，布局格式为<code>page</code>：</p>
<blockquote>
<p>hexo new page tags</p>
</blockquote>
<p>执行完以后可以在根目录-<code>source</code>文件夹下找到<code>tags</code>的文件夹，里面有一个<code>index.md</code>文件，内容如下：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 标签</div><div class="line">date: 2017-03-19 17:24:25</div><div class="line">type: "tags"</div><div class="line"><span class="section">comments: false</span></div><div class="line">---</div></pre></td></tr></table></figure>
<p>如果想要关闭tags页面的评论可以设置<code>comments</code>为false。</p>
<p>以后新建博客的时候在头部就有<code>tags:</code>然后输入相应的标签，执行完<code>hexo g</code>命令后<code>tags</code>会自动更新。</p>
<h2 id="添加分类（categories）页面"><a href="#添加分类（categories）页面" class="headerlink" title="添加分类（categories）页面"></a>添加分类（categories）页面</h2><p>和上面一样在根目录下执行如下命令：</p>
<blockquote>
<p>hexo new page categories</p>
</blockquote>
<p>同样能够在<code>source</code>下找到<code>categories</code>文件夹，内容为：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">---</span></div><div class="line"><span class="attr">title:</span> <span class="string">分类</span></div><div class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="bullet">-03</span><span class="bullet">-19</span> <span class="number">17</span><span class="string">:25:42</span></div><div class="line"><span class="attr">type:</span> <span class="string">"categories"</span></div><div class="line"><span class="attr">comments:</span> <span class="literal">false</span></div><div class="line"><span class="meta">---</span></div></pre></td></tr></table></figure>
<h2 id="添加404页面"><a href="#添加404页面" class="headerlink" title="添加404页面"></a>添加404页面</h2><p>新建一个<code>404.html</code>文件，放在<code>themes\next\source</code>目录下。这个可以随便添加，本博客使用的是腾讯公益页面。</p>
<h2 id="展示摘要"><a href="#展示摘要" class="headerlink" title="展示摘要"></a>展示摘要</h2><p>如果一篇文章过长，那么在首页文章列表中会看到将全部内容展示出来，浏览的时候有很多不方便之处，<code>next</code>主题提供了自动摘录功能，在<code>themes\next</code>文件夹下找到<code>next</code>文件夹，然后配置</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">auto_excerpt:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  length:</span> <span class="number">150</span></div></pre></td></tr></table></figure>
<p>长度可以自定，不过更推荐使用下面的方式：</p>
<p>在文章中添加 <code>&lt;!--more--&gt;</code>则在这之前的会被当做摘要展示。</p>
<h2 id="修改icon以及头像"><a href="#修改icon以及头像" class="headerlink" title="修改icon以及头像"></a>修改icon以及头像</h2><p>网站小图标名字叫<code>favicon.ico</code>,位置是在<code>source\favicon.ico</code>，自己制作一个替换即可。</p>
<p>个人头像名字叫<code>avatar.jpg</code>,位置在<code>themes\next\source\images\avatar.jpg</code>,同样替换即可。</p>
<p>还有更多的配置内容请参看<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">next官网</a>。</p>
<p>这里附上本博客的配置:</p>
<p>_config.yml配置文件内容如下：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></div><div class="line"></div><div class="line"><span class="comment"># Site</span></div><div class="line"><span class="attr">title:</span> <span class="string">Maintel-编程记</span></div><div class="line"><span class="attr">subtitle:</span></div><div class="line"><span class="attr">description:</span> <span class="string">IT</span> <span class="string">小工</span></div><div class="line"><span class="attr">author:</span> <span class="string">Maintel</span></div><div class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></div><div class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># URL</span></div><div class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class="line"><span class="attr">url:</span> <span class="string">"https://maintel.github.io"</span></div><div class="line"><span class="attr">root:</span> <span class="string">/</span></div><div class="line"><span class="attr">permalink:</span> <span class="string">/blog/:year/:month/:title.html</span></div><div class="line"><span class="attr">permalink_defaults:</span></div><div class="line"></div><div class="line"><span class="comment"># Directory</span></div><div class="line"><span class="attr">source_dir:</span> <span class="string">source</span></div><div class="line"><span class="attr">public_dir:</span> <span class="string">public</span></div><div class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></div><div class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></div><div class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></div><div class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></div><div class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></div><div class="line"><span class="attr">skip_render:</span></div><div class="line"></div><div class="line"><span class="comment"># Writing</span></div><div class="line"><span class="attr">new_post_name:</span> <span class="attr">year-:month-:day-:title.md</span> <span class="comment"># File name of new posts</span></div><div class="line"><span class="attr">default_layout:</span> <span class="string">post</span></div><div class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></div><div class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></div><div class="line"><span class="attr">filename_case:</span> <span class="number">0</span></div><div class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></div><div class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></div><div class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></div><div class="line"><span class="attr">future:</span> <span class="literal">true</span></div><div class="line"><span class="attr">highlight:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  tab_replace:</span></div><div class="line"></div><div class="line"><span class="comment"># Category &amp; Tag</span></div><div class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></div><div class="line"><span class="attr">category_map:</span></div><div class="line"><span class="attr">tag_map:</span></div><div class="line"></div><div class="line"><span class="comment"># Date / Time format</span></div><div class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></div><div class="line"><span class="comment">## You can customize the date format as defined in</span></div><div class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></div><div class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></div><div class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></div><div class="line"></div><div class="line"><span class="comment"># Pagination</span></div><div class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></div><div class="line"><span class="attr">per_page:</span> <span class="number">10</span></div><div class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></div><div class="line"></div><div class="line"><span class="comment"># Extensions</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line"><span class="attr">theme:</span> <span class="string">next</span></div><div class="line"></div><div class="line"><span class="comment"># Deployment</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> <span class="string">git</span></div><div class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/maintel/maintel.github.io.git</span></div><div class="line"><span class="attr">  branch:</span> <span class="string">master</span></div></pre></td></tr></table></figure>
<p>主题配置文件：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Site Information Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># Put your favicon.ico into `hexo-site/source/` directory.</span></div><div class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></div><div class="line"></div><div class="line"><span class="comment"># Set default keywords (Use a comma to separate)</span></div><div class="line"><span class="attr">keywords:</span> <span class="string">"Hexo, NexT"</span></div><div class="line"></div><div class="line"><span class="comment"># Set rss to false to disable feed link.</span></div><div class="line"><span class="comment"># Leave rss as empty to use site's feed link.</span></div><div class="line"><span class="comment"># Set rss to specific value if you have burned your feed already.</span></div><div class="line"><span class="attr">rss:</span></div><div class="line"></div><div class="line"><span class="comment"># Specify the date when the site was setup</span></div><div class="line"><span class="comment">#since: 2015</span></div><div class="line"></div><div class="line"><span class="comment"># icon between year and author @Footer</span></div><div class="line"><span class="attr">authoricon:</span> <span class="string">heart</span></div><div class="line"></div><div class="line"><span class="comment"># Footer `powered-by` and `theme-info` copyright</span></div><div class="line"><span class="attr">copyright:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.</span></div><div class="line"><span class="comment"># See: https://support.google.com/webmasters/answer/139066</span></div><div class="line"><span class="comment"># Tips: Before you open this tag, remember set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )</span></div><div class="line"><span class="attr">canonical:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Change headers hierarchy on site-subtitle (will be main site description) and on all post/pages titles for better SEO-optimization.</span></div><div class="line"><span class="attr">seo:</span> <span class="literal">false</span></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Menu Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)</span></div><div class="line"><span class="attr">menu:</span></div><div class="line"><span class="attr">  home:</span> <span class="string">/</span></div><div class="line"><span class="attr">  categories:</span> <span class="string">/categories/index.html</span></div><div class="line"><span class="attr">  about:</span> <span class="string">/about</span></div><div class="line"><span class="attr">  archives:</span> <span class="string">/archives/index.html</span></div><div class="line"><span class="attr">  tags:</span> <span class="string">/tags/index.html</span></div><div class="line">  <span class="comment">#sitemap: /sitemap.xml</span></div><div class="line">  <span class="comment"># commonweal: /404.html</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Enable/Disable menu icons.</span></div><div class="line"><span class="comment"># Icon Mapping:</span></div><div class="line"><span class="comment">#   Map a menu item to a specific FontAwesome icon name.</span></div><div class="line"><span class="comment">#   Key is the name of menu item and value is the name of FontAwesome icon. Key is case-senstive.</span></div><div class="line"><span class="comment">#   When an question mask icon presenting up means that the item has no mapping icon.</span></div><div class="line"><span class="attr">menu_icons:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line">  <span class="comment">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></div><div class="line"><span class="attr">  home:</span> <span class="string">home</span></div><div class="line"><span class="attr">  about:</span> <span class="string">user</span></div><div class="line"><span class="attr">  categories:</span> <span class="string">th</span></div><div class="line"><span class="attr">  schedule:</span> <span class="string">calendar</span></div><div class="line"><span class="attr">  tags:</span> <span class="string">tags</span></div><div class="line"><span class="attr">  archives:</span> <span class="string">archive</span></div><div class="line"><span class="attr">  sitemap:</span> <span class="string">sitemap</span></div><div class="line"><span class="attr">  commonweal:</span> <span class="string">heartbeat</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Scheme Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># Schemes</span></div><div class="line"><span class="comment"># scheme: Muse</span></div><div class="line"><span class="attr">scheme:</span> <span class="string">Mist</span></div><div class="line"><span class="comment">#scheme: Pisces</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Font Settings</span></div><div class="line"><span class="comment"># - Find fonts on Google Fonts (https://www.google.com/fonts)</span></div><div class="line"><span class="comment"># - All fonts set here will have the following styles:</span></div><div class="line"><span class="comment">#     light, light italic, normal, normal italic, bold, bold italic</span></div><div class="line"><span class="comment"># - Be aware that setting too much fonts will cause site running slowly</span></div><div class="line"><span class="comment"># - Introduce in 5.0.1</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="attr">font:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"></div><div class="line">  <span class="comment"># Uri of fonts host. E.g. //fonts.googleapis.com (Default)</span></div><div class="line"><span class="attr">  host:</span></div><div class="line"></div><div class="line">  <span class="comment"># Global font settings used on &lt;body&gt; element.</span></div><div class="line"><span class="attr">  global:</span></div><div class="line">    <span class="comment"># external: true will load this font family from host.</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span> <span class="string">Lato</span></div><div class="line"></div><div class="line">  <span class="comment"># Font settings for Headlines (h1, h2, h3, h4, h5, h6)</span></div><div class="line">  <span class="comment"># Fallback to `global` font settings.</span></div><div class="line"><span class="attr">  headings:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span></div><div class="line"></div><div class="line">  <span class="comment"># Font settings for posts</span></div><div class="line">  <span class="comment"># Fallback to `global` font settings.</span></div><div class="line"><span class="attr">  posts:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span></div><div class="line"></div><div class="line">  <span class="comment"># Font settings for Logo</span></div><div class="line">  <span class="comment"># Fallback to `global` font settings.</span></div><div class="line">  <span class="comment"># The `size` option use `px` as unit</span></div><div class="line"><span class="attr">  logo:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span></div><div class="line"><span class="attr">    size:</span></div><div class="line"></div><div class="line">  <span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></div><div class="line"><span class="attr">  codes:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span></div><div class="line"><span class="attr">    size:</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Sidebar Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Social Links</span></div><div class="line"><span class="comment"># Key is the link label showing to end users.</span></div><div class="line"><span class="comment"># Value is the target link (E.g. GitHub: https://github.com/iissnan)</span></div><div class="line"><span class="comment">#social:</span></div><div class="line">  <span class="comment">#LinkLabel: Link</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Social links</span></div><div class="line"><span class="attr">social:</span></div><div class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/maintel</span></div><div class="line">  <span class="comment"># weibo: http://weibo.com/ouyanglip</span></div><div class="line">  <span class="comment"># zhihu: http://www.zhihu.com/people/lippi-ouyang</span></div><div class="line">  <span class="comment">#Others:</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Social Links Icons</span></div><div class="line"><span class="comment"># Icon Mapping:</span></div><div class="line"><span class="comment">#   Map a menu item to a specific FontAwesome icon name.</span></div><div class="line"><span class="comment">#   Key is the name of the item and value is the name of FontAwesome icon. Key is case-senstive.</span></div><div class="line"><span class="comment">#   When an globe mask icon presenting up means that the item has no mapping icon.</span></div><div class="line"><span class="attr">social_icons:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line">  <span class="comment"># Icon Mappings.</span></div><div class="line">  <span class="comment"># KeyMapsToSocialItemKey: NameOfTheIconFromFontAwesome</span></div><div class="line"><span class="attr">  GitHub:</span> <span class="string">github</span></div><div class="line">  <span class="comment"># Twitter: twitter</span></div><div class="line">  <span class="comment"># Weibo: weibo</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Sidebar Avatar</span></div><div class="line"><span class="comment"># in theme directory(source/images): /images/avatar.jpg</span></div><div class="line"><span class="comment"># in site  directory(source/uploads): /uploads/avatar.jpg</span></div><div class="line"><span class="attr">avatar:</span> <span class="string">/images/avatar.jpg</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Table Of Contents in the Sidebar</span></div><div class="line"><span class="attr">toc:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"></div><div class="line">  <span class="comment"># Automatically add list number to toc.</span></div><div class="line"><span class="attr">  number:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Creative Commons 4.0 International License.</span></div><div class="line"><span class="comment"># http://creativecommons.org/</span></div><div class="line"><span class="comment"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></div><div class="line"><span class="comment">#creative_commons: by-nc-sa</span></div><div class="line"><span class="comment">#creative_commons:</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="attr">sidebar:</span></div><div class="line">  <span class="comment"># Sidebar Position, available value: left | right</span></div><div class="line"><span class="attr">  position:</span> <span class="string">left</span></div><div class="line">  <span class="comment">#position: right</span></div><div class="line"></div><div class="line">  <span class="comment"># Sidebar Display, available value:</span></div><div class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></div><div class="line">  <span class="comment">#  - always  expand for all pages automatically</span></div><div class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></div><div class="line">  <span class="comment">#  - remove  Totally remove sidebar including sidebar toggle.</span></div><div class="line"><span class="attr">  display:</span> <span class="string">post</span></div><div class="line">  <span class="comment">#display: always</span></div><div class="line">  <span class="comment">#display: hide</span></div><div class="line">  <span class="comment">#display: remove</span></div><div class="line"></div><div class="line">  <span class="comment"># Sidebar offset from top menubar in pixels.</span></div><div class="line"><span class="attr">  offset:</span> <span class="number">12</span></div><div class="line"><span class="attr">  offset_float:</span> <span class="number">0</span></div><div class="line"></div><div class="line">  <span class="comment"># Back to top in sidebar</span></div><div class="line"><span class="attr">  b2t:</span> <span class="literal">false</span></div><div class="line"></div><div class="line">  <span class="comment"># Scroll percent label in b2t button</span></div><div class="line"><span class="attr">  scrollpercent:</span> <span class="literal">false</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Blog rolls</span></div><div class="line"><span class="comment">#links_title: Links</span></div><div class="line"><span class="comment">#links_layout: block</span></div><div class="line"><span class="comment">#links_layout: inline</span></div><div class="line"><span class="comment">#links:</span></div><div class="line">  <span class="comment">#Title: http://example.com/</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Post Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span></div><div class="line"><span class="attr">scroll_to_more:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.duo</span></div><div class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Automatically Excerpt. Not recommend.</span></div><div class="line"><span class="comment"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></div><div class="line"><span class="attr">auto_excerpt:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  length:</span> <span class="number">150</span></div><div class="line"></div><div class="line"><span class="comment"># Post meta display settings</span></div><div class="line"><span class="attr">post_meta:</span></div><div class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  created_at:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  updated_at:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  categories:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Post wordcount display settings</span></div><div class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></div><div class="line"><span class="attr">post_wordcount:</span></div><div class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  wordcount:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  min2read:</span> <span class="literal">false</span></div><div class="line"></div><div class="line"><span class="comment"># Wechat Subscriber</span></div><div class="line"><span class="comment">#wechat_subscriber:</span></div><div class="line">  <span class="comment">#enabled: true</span></div><div class="line">  <span class="comment">#qcode: /path/to/your/wechatqcode ex. /uploads/wechat-qcode.jpg</span></div><div class="line">  <span class="comment">#description: ex. subscribe to my blog by scanning my public wechat account</span></div><div class="line"></div><div class="line"><span class="comment"># Declare license on posts</span></div><div class="line"><span class="attr">post_copyright:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">3.0</span></div><div class="line"><span class="attr">  license_url:</span> <span class="attr">https://creativecommons.org/licenses/by-nc-sa/3.0/</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Misc Theme Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># Custom Logo.</span></div><div class="line"><span class="comment"># !!Only available for Default Scheme currently.</span></div><div class="line"><span class="comment"># Options:</span></div><div class="line"><span class="comment">#   enabled: [true/false] - Replace with specific image</span></div><div class="line"><span class="comment">#   image: url-of-image   - Images's url</span></div><div class="line"><span class="attr">custom_logo:</span></div><div class="line"><span class="attr">  enabled:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  image:</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Code Highlight theme</span></div><div class="line"><span class="comment"># Available value:</span></div><div class="line"><span class="comment">#    normal | night | night eighties | night blue | night bright</span></div><div class="line"><span class="comment"># https://github.com/chriskempson/tomorrow-theme</span></div><div class="line"><span class="attr">highlight_theme:</span> <span class="string">normal</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Third Party Services Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># MathJax Support</span></div><div class="line"><span class="attr">mathjax:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  per_page:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  cdn:</span> <span class="string">//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Swiftype Search API Key</span></div><div class="line"><span class="comment">#swiftype_key:</span></div><div class="line"></div><div class="line"><span class="comment"># Baidu Analytics ID</span></div><div class="line"><span class="attr">baidu_analytics:</span> <span class="number">3e7</span><span class="string">db1112f6e1fe650d6ace646c9e4e3</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Duoshuo ShortName</span></div><div class="line"><span class="comment"># duoshuo_shortname: maintel</span></div><div class="line"></div><div class="line"><span class="comment"># Disqus</span></div><div class="line"><span class="comment">#disqus_shortname:</span></div><div class="line"></div><div class="line"><span class="comment"># Hypercomments</span></div><div class="line"><span class="comment">#hypercomments_id:</span></div><div class="line"></div><div class="line"><span class="comment"># Gentie productKey</span></div><div class="line"><span class="comment">#gentie_productKey:</span></div><div class="line"></div><div class="line"><span class="comment"># Support for youyan comments system.</span></div><div class="line"><span class="comment"># You can get your uid from http://www.uyan.cc</span></div><div class="line"><span class="comment">#youyan_uid: your uid</span></div><div class="line"></div><div class="line"><span class="comment"># Support for LiveRe comments system.</span></div><div class="line"><span class="comment"># You can get your uid from https://livere.com/insight/myCode (General web site)</span></div><div class="line"><span class="comment">#livere_uid: your uid</span></div><div class="line"></div><div class="line"><span class="comment"># Baidu Share</span></div><div class="line"><span class="comment"># Available value:</span></div><div class="line"><span class="comment">#    button | slide</span></div><div class="line"><span class="comment"># Warning: Baidu Share does not support https.</span></div><div class="line"><span class="comment">#baidushare:</span></div><div class="line"><span class="comment">##  type: button</span></div><div class="line"></div><div class="line"><span class="comment"># Share</span></div><div class="line"><span class="comment">#jiathis:</span></div><div class="line"><span class="comment"># Warning: JiaThis does not support https.</span></div><div class="line"><span class="comment">#add_this_id:</span></div><div class="line"></div><div class="line"><span class="comment"># Share</span></div><div class="line"><span class="comment"># duoshuo_share: true</span></div><div class="line"><span class="comment"># duoshuo_hotartical: true</span></div><div class="line"></div><div class="line"><span class="comment"># Google Webmaster tools verification setting</span></div><div class="line"><span class="comment"># See: https://www.google.com/webmasters/</span></div><div class="line"><span class="comment">#google_site_verification:</span></div><div class="line"></div><div class="line"><span class="comment"># Google Analytics</span></div><div class="line"><span class="comment">#google_analytics:</span></div><div class="line"></div><div class="line"><span class="comment"># Yandex Webmaster tools verification setting</span></div><div class="line"><span class="comment"># See: https://webmaster.yandex.ru/</span></div><div class="line"><span class="comment">#yandex_site_verification:</span></div><div class="line"></div><div class="line"><span class="comment"># CNZZ count</span></div><div class="line"><span class="comment">#cnzz_siteid:</span></div><div class="line"></div><div class="line"><span class="comment"># Application Insights</span></div><div class="line"><span class="comment"># See https://azure.microsoft.com/en-us/services/application-insights/</span></div><div class="line"><span class="comment"># application_insights:</span></div><div class="line"></div><div class="line"><span class="comment"># Make duoshuo show UA</span></div><div class="line"><span class="comment"># user_id must NOT be null when admin_enable is true!</span></div><div class="line"><span class="comment"># you can visit http://dev.duoshuo.com get duoshuo user id.</span></div><div class="line"><span class="comment"># duoshuo_info:</span></div><div class="line"><span class="comment">#   ua_enable: true</span></div><div class="line"><span class="comment">#   admin_enable: false</span></div><div class="line"><span class="comment">#   user_id: 0</span></div><div class="line">  <span class="comment">#admin_nickname: Author</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Facebook SDK Support.</span></div><div class="line"><span class="comment"># https://github.com/iissnan/hexo-theme-next/pull/410</span></div><div class="line"><span class="attr">facebook_sdk:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  app_id:</span>       <span class="comment">#&lt;app_id&gt;</span></div><div class="line"><span class="attr">  fb_admin:</span>     <span class="comment">#&lt;user_id&gt;</span></div><div class="line"><span class="attr">  like_button:</span>  <span class="comment">#true</span></div><div class="line"><span class="attr">  webmaster:</span>    <span class="comment">#true</span></div><div class="line"></div><div class="line"><span class="comment"># Facebook comments plugin</span></div><div class="line"><span class="comment"># This plugin depends on Facebook SDK.</span></div><div class="line"><span class="comment"># If facebook_sdk.enable is false, Facebook comments plugin is unavailable.</span></div><div class="line"><span class="attr">facebook_comments_plugin:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  num_of_posts:</span> <span class="number">10</span>  <span class="comment"># min posts num is 1</span></div><div class="line"><span class="attr">  width:</span> <span class="number">100</span><span class="string">%</span>       <span class="comment"># default width is 550px</span></div><div class="line"><span class="attr">  scheme:</span> <span class="string">light</span>     <span class="comment"># default scheme is light (light or dark)</span></div><div class="line"></div><div class="line"><span class="comment"># VKontakte API Support.</span></div><div class="line"><span class="comment"># To get your AppID visit https://vk.com/editapp?act=create</span></div><div class="line"><span class="attr">vkontakte_api:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  app_id:</span>       <span class="comment">#&lt;app_id&gt;</span></div><div class="line"><span class="attr">  like:</span>         <span class="literal">true</span></div><div class="line"><span class="attr">  comments:</span>     <span class="literal">true</span></div><div class="line"><span class="attr">  num_of_posts:</span> <span class="number">10</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Show number of visitors to each article.</span></div><div class="line"><span class="comment"># You can visit https://leancloud.cn get AppID and AppKey.</span></div><div class="line"><span class="attr">leancloud_visitors:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  app_id:</span> <span class="comment">#&lt;app_id&gt;</span></div><div class="line"><span class="attr">  app_key:</span> <span class="comment">#&lt;app_key&gt;</span></div><div class="line"></div><div class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></div><div class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></div><div class="line"><span class="attr">busuanzi_count:</span></div><div class="line">  <span class="comment"># count values only if the other configs are false</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line">  <span class="comment"># custom uv span for the whole site</span></div><div class="line"><span class="attr">  site_uv:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  site_uv_header:</span> <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-user"&gt;&lt;/i&gt;</span></div><div class="line"><span class="attr">  site_uv_footer:</span></div><div class="line">  <span class="comment"># custom pv span for the whole site</span></div><div class="line"><span class="attr">  site_pv:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  site_pv_header:</span> <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-eye"&gt;&lt;/i&gt;</span></div><div class="line"><span class="attr">  site_pv_footer:</span></div><div class="line">  <span class="comment"># custom pv span for one page only</span></div><div class="line"><span class="attr">  page_pv:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  page_pv_header:</span> <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-file-o"&gt;&lt;/i&gt;</span></div><div class="line"><span class="attr">  page_pv_footer:</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Tencent analytics ID</span></div><div class="line"><span class="comment"># tencent_analytics:</span></div><div class="line"></div><div class="line"><span class="comment"># Tencent MTA ID</span></div><div class="line"><span class="comment"># tencent_mta:</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span></div><div class="line"><span class="attr">baidu_push:</span> <span class="literal">false</span></div><div class="line"></div><div class="line"><span class="comment"># Google Calendar</span></div><div class="line"><span class="comment"># Share your recent schedule to others via calendar page</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># API Documentation:</span></div><div class="line"><span class="comment"># https://developers.google.com/google-apps/calendar/v3/reference/events/list</span></div><div class="line"><span class="attr">calendar:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  calendar_id:</span> <span class="string">&lt;required&gt;</span></div><div class="line"><span class="attr">  api_key:</span> <span class="string">&lt;required&gt;</span></div><div class="line"><span class="attr">  orderBy:</span> <span class="string">startTime</span></div><div class="line"><span class="attr">  offsetMax:</span> <span class="number">24</span></div><div class="line"><span class="attr">  offsetMin:</span> <span class="number">4</span></div><div class="line"><span class="attr">  timeZone:</span></div><div class="line"><span class="attr">  showDeleted:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  singleEvents:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  maxResults:</span> <span class="number">250</span></div><div class="line"></div><div class="line"><span class="comment"># Algolia Search</span></div><div class="line"><span class="attr">algolia_search:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  hits:</span></div><div class="line"><span class="attr">    per_page:</span> <span class="number">10</span></div><div class="line"><span class="attr">  labels:</span></div><div class="line"><span class="attr">    input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></div><div class="line"><span class="attr">    hits_empty:</span> <span class="string">"We didn't find any results for the search: $&#123;query&#125;"</span></div><div class="line"><span class="attr">    hits_stats:</span> <span class="string">"$&#123;hits&#125; results found in $&#123;time&#125; ms"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Local search</span></div><div class="line"><span class="attr">local_search:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"></div><div class="line"><span class="comment"># External URL with BASE64 encrypt &amp; decrypt</span></div><div class="line"><span class="comment"># Usage: &#123;% exturl text url "title" %&#125;</span></div><div class="line"><span class="comment"># Alias: &#123;% extlink text url "title" %&#125;</span></div><div class="line"><span class="attr">exturl:</span> <span class="literal">false</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#! ---------------------------------------------------------------</span></div><div class="line"><span class="comment">#! DO NOT EDIT THE FOLLOWING SETTINGS</span></div><div class="line"><span class="comment">#! UNLESS YOU KNOW WHAT YOU ARE DOING</span></div><div class="line"><span class="comment">#! ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># Motion</span></div><div class="line"><span class="attr">use_motion:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Fancybox</span></div><div class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Canvas-nest</span></div><div class="line"><span class="attr">canvas_nest:</span> <span class="literal">false</span></div><div class="line"></div><div class="line"><span class="comment"># Script Vendors.</span></div><div class="line"><span class="comment"># Set a CDN address for the vendor you want to customize.</span></div><div class="line"><span class="comment"># For example</span></div><div class="line"><span class="comment">#    jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js</span></div><div class="line"><span class="comment"># Be aware that you should use the same version as internal ones to avoid potential problems.</span></div><div class="line"><span class="comment"># Please use the https protocol of CDN files when you enable https on your site.</span></div><div class="line"><span class="attr">vendors:</span></div><div class="line">  <span class="comment"># Internal path prefix. Please do not edit it.</span></div><div class="line"><span class="attr">  _internal:</span> <span class="string">lib</span></div><div class="line"></div><div class="line">  <span class="comment"># Internal version: 2.1.3</span></div><div class="line"><span class="attr">  jquery:</span></div><div class="line"></div><div class="line">  <span class="comment"># Internal version: 2.1.5</span></div><div class="line">  <span class="comment"># See: http://fancyapps.com/fancybox/</span></div><div class="line"><span class="attr">  fancybox:</span></div><div class="line"><span class="attr">  fancybox_css:</span></div><div class="line"></div><div class="line">  <span class="comment"># Internal version: 1.0.6</span></div><div class="line">  <span class="comment"># See: https://github.com/ftlabs/fastclick</span></div><div class="line"><span class="attr">  fastclick:</span></div><div class="line"></div><div class="line">  <span class="comment"># Internal version: 1.9.7</span></div><div class="line">  <span class="comment"># See: https://github.com/tuupola/jquery_lazyload</span></div><div class="line"><span class="attr">  lazyload:</span></div><div class="line"></div><div class="line">  <span class="comment"># Internal version: 1.2.1</span></div><div class="line">  <span class="comment"># See: http://VelocityJS.org</span></div><div class="line"><span class="attr">  velocity:</span></div><div class="line"></div><div class="line">  <span class="comment"># Internal version: 1.2.1</span></div><div class="line">  <span class="comment"># See: http://VelocityJS.org</span></div><div class="line"><span class="attr">  velocity_ui:</span></div><div class="line"></div><div class="line">  <span class="comment"># Internal version: 0.7.9</span></div><div class="line">  <span class="comment"># See: https://faisalman.github.io/ua-parser-js/</span></div><div class="line"><span class="attr">  ua_parser:</span></div><div class="line"></div><div class="line">  <span class="comment"># Internal version: 4.6.2</span></div><div class="line">  <span class="comment"># See: http://fontawesome.io/</span></div><div class="line"><span class="attr">  fontawesome:</span></div><div class="line"></div><div class="line">  <span class="comment"># Internal version: 1</span></div><div class="line">  <span class="comment"># https://www.algolia.com</span></div><div class="line"><span class="attr">  algolia_instant_js:</span></div><div class="line"><span class="attr">  algolia_instant_css:</span></div><div class="line"></div><div class="line">  <span class="comment"># Internal version: 1.0.0</span></div><div class="line">  <span class="comment"># https://github.com/hustcc/canvas-nest.js</span></div><div class="line"><span class="attr">  canvas_nest:</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Assets</span></div><div class="line"><span class="attr">css:</span> <span class="string">css</span></div><div class="line"><span class="attr">js:</span> <span class="string">js</span></div><div class="line"><span class="attr">images:</span> <span class="string">images</span></div><div class="line"></div><div class="line"><span class="comment"># Theme version</span></div><div class="line"><span class="attr">version:</span> <span class="number">5.1</span><span class="number">.0</span></div><div class="line"></div><div class="line"><span class="comment"># title</span></div><div class="line"><span class="attr">links_title:</span> <span class="string">友情链接</span></div><div class="line"><span class="attr">links:</span></div><div class="line"><span class="attr">  maintel:</span> <span class="attr">http://www.maintel.cn</span></div><div class="line"><span class="attr">  GitHub:</span> <span class="attr">http://www.github.com</span></div></pre></td></tr></table></figure>
<p>以上。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇主要记录在使用Hexo部署博客过程主题设置，以及一些技巧等。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://maintel.github.io/categories/hexo/"/>
    
    
      <category term="Hexo" scheme="https://maintel.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Retrofit、OKHttp访问接口时添加公共参数</title>
    <link href="https://maintel.github.io//blog/2017/04/Retrofit%E3%80%81OKHttp%E8%AE%BF%E9%97%AE%E6%8E%A5%E5%8F%A3%E6%97%B6%E6%B7%BB%E5%8A%A0%E5%85%AC%E5%85%B1%E5%8F%82%E6%95%B0.html"/>
    <id>https://maintel.github.io//blog/2017/04/Retrofit、OKHttp访问接口时添加公共参数.html</id>
    <published>2017-04-18T08:08:50.000Z</published>
    <updated>2017-06-25T02:59:55.675Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h1><p>在实际的开发中，有时候后台需要在每个接口中带有一些公共的参数，比如当前APP的版本、访问时间、或者一些约定的秘钥等等，当然我们可以在每个接口中都添加这样的参数就可以了，但是那样做对一个程序员来说肯定不够优雅，所以就想怎么在接口请求的时候统一的对所有的接口加上这些参数。</p>
<a id="more"></a>
<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>经过查阅资料发现可以使用OKHttp的拦截器(<code>Interceptor</code>)实现。</p>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><ul>
<li><p>新建一个<code>MyInterceptor</code>实现<code>Interceptor</code>接口；</p>
</li>
<li><p>重写<code>intercept</code>方法。</p>
</li>
</ul>
<h2 id="具体代码如下"><a href="#具体代码如下" class="headerlink" title="具体代码如下"></a>具体代码如下</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> Response <span class="title">intercept</span><span class="params">(Chain chain)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line"></div><div class="line">    Request request = chain.request();</div><div class="line">    RequestBody requestBody = request.body();</div><div class="line">    <span class="keyword">if</span> (request.method().equals(<span class="string">"GET"</span>)) &#123;</div><div class="line">        HttpUrl url = request.url();</div><div class="line"></div><div class="line">        Set&lt;String&gt; parameterNames = url.queryParameterNames();      <span class="comment">//</span></div><div class="line">        <span class="keyword">for</span> (String key : parameterNames) &#123;                          <span class="comment">//循环参数列表</span></div><div class="line">            <span class="keyword">if</span> (BuildConfig.DEBUG) Log.e(<span class="string">"MyInterceptor"</span>, key);      <span class="comment">// 如果要对已有的参数做进一步处理可以这样拿到参数</span></div><div class="line">        &#125;                                                            <span class="comment">//只添加的话 倒是没有必要</span></div><div class="line">        String sUrl = url.toString();</div><div class="line">        <span class="keyword">int</span> index = sUrl.indexOf(<span class="string">"?"</span>);</div><div class="line">        <span class="keyword">if</span> (index &gt; <span class="number">0</span>) &#123;</div><div class="line">            sUrl = sUrl + <span class="string">"所需参数拼接"</span>;    <span class="comment">//所需参数拼接 ==&gt;就是类似于 name=123&amp;version=12&amp;....这些</span></div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            sUrl = sUrl + <span class="string">"?"</span> + <span class="string">"所需参数拼接"</span>;</div><div class="line">        &#125;</div><div class="line">        request = request.newBuilder().url(sUrl).build();   <span class="comment">//重新构建</span></div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (request.method().equals(<span class="string">"POST"</span>)) &#123;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (requestBody <span class="keyword">instanceof</span> FormBody) &#123;</div><div class="line">            FormBody.Builder builder = <span class="keyword">new</span> FormBody.Builder();</div><div class="line">            FormBody formBody = (FormBody) requestBody;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; formBody.size(); i++) &#123;    <span class="comment">// 如果要对已有的参数做进一步处理可以这样拿到参数</span></div><div class="line">                Log.e(<span class="string">"MyInterceptor"</span>, <span class="string">"encodedNames:"</span> + formBody.encodedName(i) + <span class="string">" encodedValues:"</span> + formBody.encodedValue(i));</div><div class="line">                builder.addEncoded(formBody.encodedName(i), formBody.encodedValue(i));</div><div class="line">            &#125;</div><div class="line">            builder.addEncoded(<span class="string">"参数1"</span>, <span class="string">"值1"</span>);  <span class="comment">//添加公共参数</span></div><div class="line">            builder.addEncoded(<span class="string">"参数2"</span>, <span class="string">"值2"</span>);</div><div class="line">            builder.addEncoded(<span class="string">"参数3"</span>, <span class="string">"值3"</span>);</div><div class="line">            request = request.newBuilder().post(builder.build()).build();  <span class="comment">//重新构建</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> chain.proceed(request);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>在OKHttp或Retrofit中使用</li>
</ul>
<p>两者是一样的都是通过OKHttp来添加，如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">OkHttpClient okHttpClient = <span class="keyword">new</span> OkHttpClient.Builder()</div><div class="line">        .addInterceptor(<span class="keyword">new</span> MyInterceptor())   <span class="comment">//使用拦截器</span></div><div class="line">        .connectTimeout(<span class="number">15</span>, TimeUnit.SECONDS).build();</div><div class="line">Retrofit retrofit = <span class="keyword">new</span> Retrofit.Builder()</div><div class="line">        .client(okHttpClient)</div><div class="line">        .baseUrl(<span class="string">"http://192.168.1.59:8080/"</span>)</div><div class="line">        .addConverterFactory(GsonConverterFactory.create())</div><div class="line">        .build();</div><div class="line">networkService = retrofit.create(NetworkService.class);</div></pre></td></tr></table></figure>
<p>如上所示，就完成了普通的GET和POST方式使用时对所有的接口统一添加公共接口。</p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>本人最初是为了在访问后台接口的时候对所有的参数进行统一的加密，前后端使用同样的加密算法以及秘钥，但是在具体使用过程中如何传送秘钥，以及如何保证秘钥的传递安全以及加密算法的安全是需要重点考量的。<br>通过拦截器可以做很多事情，例如缓存等。</p>
<p>参考文章：</p>
<p><a href="http://www.jianshu.com/p/2710ed1e6b48" target="_blank" rel="external">http://www.jianshu.com/p/2710ed1e6b48</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用场景&quot;&gt;&lt;a href=&quot;#使用场景&quot; class=&quot;headerlink&quot; title=&quot;使用场景&quot;&gt;&lt;/a&gt;使用场景&lt;/h1&gt;&lt;p&gt;在实际的开发中，有时候后台需要在每个接口中带有一些公共的参数，比如当前APP的版本、访问时间、或者一些约定的秘钥等等，当然我们可以在每个接口中都添加这样的参数就可以了，但是那样做对一个程序员来说肯定不够优雅，所以就想怎么在接口请求的时候统一的对所有的接口加上这些参数。&lt;/p&gt;
    
    </summary>
    
      <category term="android技术" scheme="https://maintel.github.io/categories/android%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Refrofit" scheme="https://maintel.github.io/tags/Refrofit/"/>
    
  </entry>
  
  <entry>
    <title>小心JNI中的内存泄露</title>
    <link href="https://maintel.github.io//blog/2017/04/%E5%B0%8F%E5%BF%83JNI%E4%B8%AD%E7%9A%84%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2.html"/>
    <id>https://maintel.github.io//blog/2017/04/小心JNI中的内存泄露.html</id>
    <published>2017-04-15T09:28:55.000Z</published>
    <updated>2017-06-25T02:59:55.675Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jni频繁资源未释放引起的崩溃问题</title>
    <link href="https://maintel.github.io//blog/2017/04/Jni%E9%A2%91%E7%B9%81%E8%B5%84%E6%BA%90%E6%9C%AA%E9%87%8A%E6%94%BE%E5%BC%95%E8%B5%B7%E7%9A%84%E5%B4%A9%E6%BA%83%E9%97%AE%E9%A2%98.html"/>
    <id>https://maintel.github.io//blog/2017/04/Jni频繁资源未释放引起的崩溃问题.html</id>
    <published>2017-04-12T15:17:08.000Z</published>
    <updated>2017-06-25T02:59:55.675Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Failed-adding-to-JNI-pinned-array-ref-table-1024-entries"><a href="#Failed-adding-to-JNI-pinned-array-ref-table-1024-entries" class="headerlink" title="Failed adding to JNI pinned array ref table (1024 entries)"></a>Failed adding to JNI pinned array ref table (1024 entries)</h1><p><strong>问题重现:</strong></p>
<p>在开发蓝牙模块升级的时候， 由于要传送的升级文件较大，所以需要频繁的通过JNI调用C语言来组装报文，结果在低版本手机测试时遇到<code>Failed adding to JNI pinned array ref table (1024 entries)</code>.</p>
<a id="more"></a>
<p><strong>错误代码：</strong></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function">JNIEXPORT jbyteArray JNICALL <span class="title">xxx_BleUtils_sendUpdatePkt</span><span class="params">(</span></span></div><div class="line">        JNIEnv *env, jclass jobj, jbyteArray pkt, jint pkt_sn, jint pktLen, jint token</div><div class="line">) &#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> outbuf[APPAPI_MAXSENDLEN / <span class="number">4</span>];</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> *pBuffer = (*env)-&gt;GetByteArrayElements(env, pkt, <span class="literal">NULL</span>);   <span class="comment">//&lt;==引起错误的地方</span></div><div class="line">    <span class="keyword">int</span> ret = ynLockSendPkt((<span class="keyword">uint16_t</span>) token, (<span class="keyword">uint16_t</span>) pkt_sn, pktLen,</div><div class="line">                            pBuffer,</div><div class="line">                            (<span class="keyword">char</span> *) outbuf,</div><div class="line">                            APPAPI_MAXSENDLEN);</div><div class="line">    jbyteArray <span class="built_in">array</span> = (*env)-&gt;NewByteArray(env, ret);</div><div class="line">    (*env)-&gt;SetByteArrayRegion(env, <span class="built_in">array</span>, <span class="number">0</span>, ret, outbuf);</div><div class="line">    <span class="keyword">return</span> <span class="built_in">array</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>原因：</strong></p>
<p>运行 native method 的线程的堆栈记录着 Local Reference 表的内存位置（指针 p），Local Reference表中存放JNI Local Reference实现 Local Reference 到 Java 对象的映射，函数中调用的<code>GetByteArrayElements()</code>会使Local Reference表中的存放的指针加一，频繁的调用而得不到释放的话表中的值就会一直增加，直至内存被占满引起崩溃。</p>
<p><strong>解决方法：</strong></p>
<p>在函数中<code>return</code>前释放资源：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(*env)-&gt;ReleaseByteArrayElements(env,pkt, pBuffer, <span class="number">0</span>); <span class="comment">//pkt为java层传递过来的数组，pBuffer为指针</span></div></pre></td></tr></table></figure>
<p>由于是在JNI层发生的错误，而且项目只是集成了bugly在Java层面的错误收集，所以一直找不到崩溃原因，最后不得不找了同型号的手机来测试几遍才发现问题,看来BUG收集也要尽善尽美才行啊，不能偷懒。</p>
<p>只在低配手机出现没有在高配手机出现的原因应该是高配手机分配的内存更大。但是这里的内存只要不被释放，当以后升级包更大的时候总有一天高配手机也会出现问题的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Failed-adding-to-JNI-pinned-array-ref-table-1024-entries&quot;&gt;&lt;a href=&quot;#Failed-adding-to-JNI-pinned-array-ref-table-1024-entries&quot; class=&quot;headerlink&quot; title=&quot;Failed adding to JNI pinned array ref table (1024 entries)&quot;&gt;&lt;/a&gt;Failed adding to JNI pinned array ref table (1024 entries)&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;问题重现:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在开发蓝牙模块升级的时候， 由于要传送的升级文件较大，所以需要频繁的通过JNI调用C语言来组装报文，结果在低版本手机测试时遇到&lt;code&gt;Failed adding to JNI pinned array ref table (1024 entries)&lt;/code&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="android技术" scheme="https://maintel.github.io/categories/android%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="JNI" scheme="https://maintel.github.io/tags/JNI/"/>
    
  </entry>
  
  <entry>
    <title>android单元测试遇到的问题</title>
    <link href="https://maintel.github.io//blog/2017/03/android%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.html"/>
    <id>https://maintel.github.io//blog/2017/03/android单元测试遇到的问题.html</id>
    <published>2017-03-30T09:16:42.000Z</published>
    <updated>2017-06-25T02:59:55.675Z</updated>
    
    <content type="html"><![CDATA[<p>本篇主要记录在学习<code>android单元测试</code>的过程中遇到的一些问题和解决方法，以后遇到的时候能够随时翻阅。</p>
<a id="more"></a>
<h2 id="Junit-出现的问题Empty-test-suite"><a href="#Junit-出现的问题Empty-test-suite" class="headerlink" title="Junit 出现的问题Empty test suite"></a><code>Junit</code> 出现的问题<code>Empty test suite</code></h2><p>运行单元测试<strong>出现<code>Class not found: &quot;package.ExampleUnitTest&quot;Empty test suite.</code>错误</strong></p>
<p>项目运行了但实际上并没有建立单元测试，即使配置了<code>Junit</code>,此时，首先<code>Build</code>-&gt;<code>Make Project</code>然后再运行测试就可以了；<a href="https://code.google.com/p/android/issues/detail?id=230688" target="_blank" rel="external">参考</a>：</p>
<blockquote>
<p>It seems the Run action doesn’t actually build unit tests even though you have a JUnit configuration selected. First running “Make project” and then “Run” will work fine.</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇主要记录在学习&lt;code&gt;android单元测试&lt;/code&gt;的过程中遇到的一些问题和解决方法，以后遇到的时候能够随时翻阅。&lt;/p&gt;
    
    </summary>
    
      <category term="android技术" scheme="https://maintel.github.io/categories/android%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="android单元测试" scheme="https://maintel.github.io/tags/android%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>synchronized关键字的使用</title>
    <link href="https://maintel.github.io//blog/2017/03/synchronized%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%BF%E7%94%A8.html"/>
    <id>https://maintel.github.io//blog/2017/03/synchronized关键字的使用.html</id>
    <published>2017-03-30T09:01:21.000Z</published>
    <updated>2017-06-25T02:59:55.675Z</updated>
    
    <content type="html"><![CDATA[<p><strong>主要讲<code>synchronized</code>关键字的用法和不同之处</strong></p>
<a id="more"></a> 
<h1 id="开启多线程"><a href="#开启多线程" class="headerlink" title="开启多线程"></a>开启多线程</h1><p>有三个线程<code>ThreadTest1</code>、<code>ThreadTest2</code>、<code>ThreadTest3</code>:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadTest1</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</div><div class="line"></div><div class="line">    SynchronizedTest synchronizedTest;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ThreadTest1</span><span class="params">(SynchronizedTest synchronizedTest)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.synchronizedTest = synchronizedTest;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        synchronizedTest.test();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadTest2</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</div><div class="line"></div><div class="line">    SynchronizedTest synchronizedTest;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ThreadTest2</span><span class="params">(SynchronizedTest synchronizedTest)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.synchronizedTest = synchronizedTest;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        synchronizedTest.test();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadTest3</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</div><div class="line"></div><div class="line">    SynchronizedTest synchronizedTest;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ThreadTest3</span><span class="params">(SynchronizedTest synchronizedTest)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.synchronizedTest = synchronizedTest;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        synchronizedTest.test();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>调用一个对象：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SynchronizedTest</span> </span>&#123;</div><div class="line">    String anyString = <span class="string">""</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SynchronizedTest</span><span class="params">(String anyString)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.anyString = anyString;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            System.out.println(<span class="string">"线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"进入同步块"</span>);</div><div class="line">            Thread.sleep(<span class="number">3000</span>);</div><div class="line">            System.out.println(<span class="string">"线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"离开同步块"</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>启动线程：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">threadStart</span><span class="params">()</span> </span>&#123;</div><div class="line">       SynchronizedTest synchronizedTest = <span class="keyword">new</span> SynchronizedTest(<span class="string">"maintel"</span>);</div><div class="line">       ThreadTest1 threadTest1 = <span class="keyword">new</span> ThreadTest1(synchronizedTest);</div><div class="line">       threadTest1.setName(<span class="string">"thread1"</span>);</div><div class="line">       threadTest1.start();</div><div class="line">       ThreadTest2 threadTest2 = <span class="keyword">new</span> ThreadTest2(synchronizedTest);</div><div class="line">       threadTest2.setName(<span class="string">"thread2"</span>);</div><div class="line">       threadTest2.start();</div><div class="line">       ThreadTest3 threadTest3 = <span class="keyword">new</span> ThreadTest3(synchronizedTest);</div><div class="line">       threadTest3.setName(<span class="string">"thread3"</span>);</div><div class="line">       threadTest3.start();</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<h1 id="先看看非安全线程的实例"><a href="#先看看非安全线程的实例" class="headerlink" title="先看看非安全线程的实例"></a>先看看非安全线程的实例</h1><p>即上面代码的输出：</p>
<pre><code>I/System.out: 线程名称为：thread1在1490859330653进入同步块
I/System.out: 线程名称为：thread2在1490859330654进入同步块
I/System.out: 线程名称为：thread3在1490859330657进入同步块
I/System.out: 线程名称为：thread1在1490859333654离开同步块
I/System.out: 线程名称为：thread2在1490859333654离开同步块
I/System.out: 线程名称为：thread3在1490859333657离开同步块
</code></pre><p>可以看到方法同时被调用，是线程不安全的。</p>
<h1 id="使用synchronized关键字修饰方法"><a href="#使用synchronized关键字修饰方法" class="headerlink" title="使用synchronized关键字修饰方法"></a>使用<code>synchronized</code>关键字修饰方法</h1><p>修改如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">synchronized</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;   <span class="comment">//  &lt;&lt;========</span></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            System.out.println(<span class="string">"线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"进入同步块"</span>);</div><div class="line">            Thread.sleep(<span class="number">3000</span>);</div><div class="line">            System.out.println(<span class="string">"线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"离开同步块"</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>再看看输入：</p>
<pre><code>I/System.out: 线程名称为：thread1在1490859832827进入同步块
I/System.out: 线程名称为：thread1在1490859835827离开同步块
I/System.out: 线程名称为：thread3在1490859835828进入同步块
I/System.out: 线程名称为：thread3在1490859838828离开同步块
I/System.out: 线程名称为：thread2在1490859838828进入同步块
I/System.out: 线程名称为：thread2在1490859841829离开同步块
</code></pre><p>可以看到线程顺序执行，当一个线程执行完毕下一个线程才会进入，因此是线程安全的。</p>
<p>这里获取的锁是SynchronizedTest的对象实例的锁—对象锁。</p>
<h1 id="多个对象多个锁"><a href="#多个对象多个锁" class="headerlink" title="多个对象多个锁"></a>多个对象多个锁</h1><p><code>threadTest()</code>方法修改如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">threadStart</span><span class="params">()</span> </span>&#123;</div><div class="line">        SynchronizedTest synchronizedTest = <span class="keyword">new</span> SynchronizedTest(<span class="string">"maintel"</span>);</div><div class="line">        SynchronizedTest synchronizedTest2 = <span class="keyword">new</span> SynchronizedTest(<span class="string">"maintel2"</span>);  <span class="comment">//&lt;&lt;==========</span></div><div class="line">        ThreadTest1 threadTest1 = <span class="keyword">new</span> ThreadTest1(synchronizedTest);</div><div class="line">        threadTest1.setName(<span class="string">"thread1"</span>);</div><div class="line">        threadTest1.start();</div><div class="line">        ThreadTest2 threadTest2 = <span class="keyword">new</span> ThreadTest2(synchronizedTest2);            <span class="comment">//&lt;&lt;=============</span></div><div class="line">        threadTest2.setName(<span class="string">"thread2"</span>);</div><div class="line">        threadTest2.start();</div><div class="line">        ThreadTest3 threadTest3 = <span class="keyword">new</span> ThreadTest3(synchronizedTest);</div><div class="line">        threadTest3.setName(<span class="string">"thread3"</span>);</div><div class="line">        threadTest3.start();</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>输出：</p>
<pre><code>I/System.out: 线程名称为：thread2在1490860191946进入同步块
I/System.out: 线程名称为：thread1在1490860191950进入同步块
I/System.out: 线程名称为：thread2在1490860194947离开同步块
I/System.out: 线程名称为：thread1在1490860194957离开同步块
I/System.out: 线程名称为：thread3在1490860194957进入同步块
I/System.out: 线程名称为：thread3在1490860197958离开同步块
</code></pre><p>可以看到线程2和线程1同时进入方法，因为<code>thread1</code>和<code>thread3</code>获取的是<code>synchronizedTest</code>的对象锁，而<code>thread2</code>获取的是<code>synchronizedTest2</code>的对象锁，两者不存在同步问题。</p>
<h1 id="同步块synchronized-this"><a href="#同步块synchronized-this" class="headerlink" title="同步块synchronized (this)"></a>同步块<code>synchronized (this)</code></h1><p>将<code>test()</code>方法修改如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;     <span class="comment">//&lt;&lt;==========</span></div><div class="line">                System.out.println(<span class="string">"线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                        + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"进入同步块"</span>);</div><div class="line">                Thread.sleep(<span class="number">3000</span>);</div><div class="line">                System.out.println(<span class="string">"线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                        + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"离开同步块"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>输入为：</p>
<pre><code>I/System.out: 线程名称为：thread1在1490860807697进入同步块
I/System.out: 线程名称为：thread1在1490860810698离开同步块
I/System.out: 线程名称为：thread2在1490860810699进入同步块
I/System.out: 线程名称为：thread2在1490860813699离开同步块
I/System.out: 线程名称为：thread3在1490860813700进入同步块
I/System.out: 线程名称为：thread3在1490860816700离开同步块
</code></pre><p>可以看到同样是同步执行的，这里线程获取的是<code>synchronized (this)</code>括号中的对象锁，这里就是<code>synchronizedTest</code>的对象锁。</p>
<h1 id="同步块synchronized-非this对象"><a href="#同步块synchronized-非this对象" class="headerlink" title="同步块synchronized (非this对象)"></a>同步块<code>synchronized (非this对象)</code></h1><p>修改<code>test()</code>方法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="keyword">synchronized</span> (anyString) &#123;    <span class="comment">//&lt;&lt;==================</span></div><div class="line">            System.out.println(<span class="string">"线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"进入同步块"</span>);</div><div class="line">            Thread.sleep(<span class="number">3000</span>);</div><div class="line">            System.out.println(<span class="string">"线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"离开同步块"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>输出：</p>
<pre><code>I/System.out: 线程名称为：thread1在1490861540167进入同步块
I/System.out: 线程名称为：thread1在1490861543168离开同步块
I/System.out: 线程名称为：thread2在1490861543168进入同步块
I/System.out: 线程名称为：thread2在1490861546169离开同步块
I/System.out: 线程名称为：thread3在1490861546169进入同步块
I/System.out: 线程名称为：thread3在1490861549169离开同步块
</code></pre><p>可以看到同样是同步执行的，这里线程获取的是<code>synchronized (anyString)</code>括号中的对象锁，这里就是<code>anyString</code>的对象锁。</p>
<h1 id="类中存在两个不同的同步方法会怎么样？"><a href="#类中存在两个不同的同步方法会怎么样？" class="headerlink" title="类中存在两个不同的同步方法会怎么样？"></a>类中存在两个不同的同步方法会怎么样？</h1><p>增加一个方法<code>test2()</code>:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">synchronized</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            System.out.println(<span class="string">"test2  线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"进入同步块"</span>);</div><div class="line">            Thread.sleep(<span class="number">3000</span>);</div><div class="line">            System.out.println(<span class="string">"test2  线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"离开同步块"</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>修改线程2为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">    synchronizedTest.test2();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>此时运行输出为：</p>
<pre><code>I/System.out: test2  线程名称为：thread2在1490862104089进入同步块
I/System.out: 线程名称为：thread3在1490862104091进入同步块
I/System.out: test2  线程名称为：thread2在1490862107090离开同步块
I/System.out: 线程名称为：thread3在1490862107092离开同步块
I/System.out: 线程名称为：thread1在1490862107092进入同步块
I/System.out: 线程名称为：thread1在1490862110092离开同步块
</code></pre><p>可以看到线程1和3是顺序执行的，线程2却是同时执行的，因为上面<code>test2()</code>方法被修饰以后，线程2获取到对象锁是<code>synchronizedTest</code>的，而线程1和3调用的是<code>test()</code>方法，获取到的是<code>anyString</code>的对象锁，两者并不冲突。</p>
<h1 id="同步块synchronized-xxx-class"><a href="#同步块synchronized-xxx-class" class="headerlink" title="同步块synchronized (xxx.class)"></a>同步块<code>synchronized (xxx.class)</code></h1><p><code>SynchronizedTest</code>中<code>test()</code>和<code>test2()</code>方法分别如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;                    <span class="comment">//&lt;&lt;=============</span></div><div class="line">            System.out.println(<span class="string">"线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"进入同步块"</span>);</div><div class="line">            Thread.sleep(<span class="number">3000</span>);</div><div class="line">            System.out.println(<span class="string">"线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"离开同步块"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="keyword">synchronized</span> (SynchronizedTest.class) &#123;   <span class="comment">//&lt;&lt;==============</span></div><div class="line">            System.out.println(<span class="string">"test2  线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"进入同步块"</span>);</div><div class="line">            Thread.sleep(<span class="number">3000</span>);</div><div class="line">            System.out.println(<span class="string">"test2  线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"离开同步块"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>此时线程2调用<code>test2()</code>方法，线程1和3调用<code>test()</code>方法，来看看输出如下：</p>
<pre><code>I/System.out: test2  线程名称为：thread2在1490867370183进入同步块
I/System.out: 线程名称为：thread1在1490867370184进入同步块
I/System.out: test2  线程名称为：thread2在1490867373184离开同步块
I/System.out: 线程名称为：thread1在1490867373185离开同步块
I/System.out: 线程名称为：thread3在1490867373185进入同步块
I/System.out: 线程名称为：thread3在1490867376185离开同步块
</code></pre><p>可以看到1和3顺序执行，2却同时执行了，为什么呢？原因在于：</p>
<p><strong>直接xxx.class锁是属于直接类的，而this是属于对象锁</strong></p>
<p>这里关系到JVM虚拟机的一些机制，以后再做讨论。</p>
<h1 id="对静态方法使用锁和普通锁的不同之处"><a href="#对静态方法使用锁和普通锁的不同之处" class="headerlink" title="对静态方法使用锁和普通锁的不同之处"></a>对静态方法使用锁和普通锁的不同之处</h1><p><code>SynchronizedTest</code>中<code>test()</code>和<code>test2()</code>方法分别如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">synchronized</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">            System.out.println(<span class="string">"线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"进入同步块"</span>);</div><div class="line">            Thread.sleep(<span class="number">3000</span>);</div><div class="line">            System.out.println(<span class="string">"线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                    + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"离开同步块"</span>);</div><div class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">synchronized</span> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        System.out.println(<span class="string">"test2  线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"进入同步块"</span>);</div><div class="line">        Thread.sleep(<span class="number">3000</span>);</div><div class="line">        System.out.println(<span class="string">"test2  线程名称为："</span> + Thread.currentThread().getName()</div><div class="line">                + <span class="string">"在"</span> + System.currentTimeMillis() + <span class="string">"离开同步块"</span>);</div><div class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>同样线程2调用<code>test2()</code>方法，线程1和3调用<code>test()</code>方法，来看看输出如下：</p>
<pre><code>I/System.out: test2  线程名称为：thread2在1490866857936进入同步块
I/System.out: 线程名称为：thread3在1490866857938进入同步块
I/System.out: test2  线程名称为：thread2在1490866860936离开同步块
I/System.out: 线程名称为：thread3在1490866860939离开同步块
I/System.out: 线程名称为：thread1在1490866860939进入同步块
I/System.out: 线程名称为：thread1在1490866863939离开同步块
</code></pre><p>可以看到1和3线程顺序执行，线程2却同时执行了，这里就是锁普通方法和静态方法的区别，如同上面使用直接类和对象的区别：</p>
<p><strong>静态方法的锁和xxx.class锁是一样的直接属于类</strong></p>
<p>到此结束，自己学习使用过程中的一些练习和理解，不对之处还请指出。还有一些更深入的关于获取锁对象的机制等问题，以后再做研究。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;主要讲&lt;code&gt;synchronized&lt;/code&gt;关键字的用法和不同之处&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="android技术" scheme="https://maintel.github.io/categories/android%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="多线程" scheme="https://maintel.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Restful初见</title>
    <link href="https://maintel.github.io//blog/2017/03/Restful%E5%88%9D%E8%A7%81.html"/>
    <id>https://maintel.github.io//blog/2017/03/Restful初见.html</id>
    <published>2017-03-21T02:30:27.000Z</published>
    <updated>2017-06-25T02:59:55.675Z</updated>
    
    <content type="html"><![CDATA[<p>Rest 指一组架构约束条件和原则，满足这些约束条件和原则的应用程序或者设计都被称为RestFul</p>
<p>Restful 更符合Http的设计规范，使用了HTTP标准方法：</p>
<ul>
<li>HEAD    只获取某个资源的头部信息。比如只想了解某个文件的大小，某个资源的修改日期等</li>
<li>GET    获取资源</li>
<li>POST    创建资源</li>
<li>PATCH    更新资源的部分属性。因为 PATCH 比较新，而且规范比较复杂，所以真正实现的比较少，一般都是用 POST 替代</li>
<li>PUT    替换资源，客户端需要提供新建资源的所有属性。如果新内容为空，要设置 Content-Length 为 0，以区别错误信息</li>
<li>DELETE    删除资源</li>
</ul>
<p>所有的操作都是针对资源的</p>
<p>资源又是什么？</p>
<p>服务程序状态和功能都能被称为资源。是一个概念实体，它向客户端公开。资源的例子有：应用程序对象、数据库记录、算法等等。每个资源都使用 URI (Universal Resource Identifier) 得到一个唯一的地址。所有资源都共享统一的接口，以便在客户端和服务器之间传输状态。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Rest 指一组架构约束条件和原则，满足这些约束条件和原则的应用程序或者设计都被称为RestFul&lt;/p&gt;
&lt;p&gt;Restful 更符合Http的设计规范，使用了HTTP标准方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HEAD    只获取某个资源的头部信息。比如只想了解某个文件的大
    
    </summary>
    
      <category term="Http" scheme="https://maintel.github.io/categories/Http/"/>
    
    
      <category term="Restful" scheme="https://maintel.github.io/tags/Restful/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo+GitHub Pages搭建个人博客</title>
    <link href="https://maintel.github.io//blog/2017/03/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2.html"/>
    <id>https://maintel.github.io//blog/2017/03/第一篇博客.html</id>
    <published>2017-03-21T01:47:03.000Z</published>
    <updated>2017-06-25T02:59:55.675Z</updated>
    
    <content type="html"><![CDATA[<p>折腾了一下午终于将Hexo博客成功跑起来，觉得还是蛮不错的，就把整个搭建踩坑的过程写下来，希望有用。</p>
<h1 id="关于GitHub-Pages"><a href="#关于GitHub-Pages" class="headerlink" title="关于GitHub Pages"></a>关于GitHub Pages</h1><p>GitHub Pages本用于介绍托管在GitHub的项目,</p>
<blockquote>
<p>GitHub Pages 可以被认为是用户编写的、托管在github上的静态网页。</p>
</blockquote>
<p>正如GitHub推出Pages服务的时候说的：</p>
<blockquote>
<p>Create a blog and spread your ideas. Whatever you want!</p>
</blockquote>
<p>而且，由于他的空间免费稳定，用来做搭建一个博客再好不过了。</p>
<h1 id="关于Hexo"><a href="#关于Hexo" class="headerlink" title="关于Hexo"></a>关于Hexo</h1><p><a href="https://github.com/hexojs/hexo" target="_blank" rel="external">Hexo</a> 是一个简单地、轻量地、基于Node的一个静态博客框架，可以方便的生成静态网页托管在github和Heroku上,引用Hexo作者 @tommy351 的话：</p>
<blockquote>
<p>快速、简单且功能强大的 Node.js 博客框架。A fast, simple &amp; powerful blog framework, powered by Node.js.</p>
</blockquote>
<p>当然也有使用Jekyll来搭建博客，而且要比使用Hexo来更为快捷，所以为什么还是要选择Hexo呢，这里主要是因为由Jekyll搭建的博客目录、Rss、sitemap无法自动生成,而Hexo很好的解决了这些问题。关于Jekyll不再做介绍，感兴趣的同学可以参考<a href="http://www.jianshu.com/p/3f355c7872d5" target="_blank" rel="external">这里</a>。</p>
<h1 id="开始搭建一-创建GitHub"><a href="#开始搭建一-创建GitHub" class="headerlink" title="开始搭建一 创建GitHub"></a>开始搭建一 创建GitHub</h1><p>安装git和使用以及在GitHub上面申请账号的过程这里不在赘述，需要的同学请自行google。</p>
<p>在GitHub上创建新的工程命名为：yourname.github.io;</p>
<p><img src="http://ocny4dbvb.bkt.clouddn.com/hexo%E5%8D%9A%E5%AE%A201.png" alt="创建GitHub工程"></p>
<p>请记下下面的链接：</p>
<p><img src="http://ocny4dbvb.bkt.clouddn.com/hexo%E5%8D%9A%E5%AE%A202.png" alt="GitHub工程链接"></p>
<h1 id="安装Node-js和Hexo"><a href="#安装Node-js和Hexo" class="headerlink" title="安装Node.js和Hexo"></a>安装Node.js和Hexo</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>由于Hexo是基于Node.js的静态框架，所以安装Node.js是必须的，可以根据自己的需要去<a href="http://nodejs.cn/download/" target="_blank" rel="external">官网</a>自行下载。</p>
<p>具体安装过程也很简单，一步一步往下Next就行。安装完成以后检查如下即表示正确：<br><img src="http://ocny4dbvb.bkt.clouddn.com/hexo%E5%8D%9A%E5%AE%A203.png" alt="nodejs安装检查"></p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>运行命令：</p>
<blockquote>
<p>npm install -g hexo-cli</p>
</blockquote>
<p>然后执行：</p>
<blockquote>
<p>npm install hexo –save</p>
</blockquote>
<p>等待运行安装完成，然后执行命令<code>hexo -v</code>检查是否正确安装：</p>
<p><img src="http://ocny4dbvb.bkt.clouddn.com/hexo%E5%8D%9A%E5%AE%A204.png" alt="hexo安装检查"></p>
<p><strong>这里有些同学可能因为国内网络问题安装比较慢，请使用科学上网工具，或者使用<a href="https://npm.taobao.org/" target="_blank" rel="external">NPM淘宝镜像</a>方法如下</strong></p>
<pre><code>执行命令：npm install -g cnpm --registry=https://registry.npm.taobao.org
接下来有关npm的命令字都使用cnpm即可
</code></pre><h1 id="开始搭建博客"><a href="#开始搭建博客" class="headerlink" title="开始搭建博客"></a>开始搭建博客</h1><p>在本地新建一个文件夹blog，在文件夹内打开命令窗口，或者使用cd命令进入。执行命令：</p>
<blockquote>
<p>hexo init</p>
</blockquote>
<p>等待命令执行完成。</p>
<p><img src="http://ocny4dbvb.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170323001313.png" alt="initHexo完成1"></p>
<p><img src="http://ocny4dbvb.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170323001330.png" alt="initHexo完成2"></p>
<p><strong>在高版本的Hexo中执行init命令会自动下载node_modules文件，由于它自动下载访问国外服务器速度较慢，这个时候可以强制停止，然后执行下面的命令</strong></p>
<blockquote>
<p>npm install</p>
</blockquote>
<p>如果init执行完成以后发现执行结果和上面不一样，而且blog文件夹中没有node_modules文件，那么在执行上面的npm install 命令即可。</p>
<p>然后执行编译文件：</p>
<blockquote>
<p>hexo g</p>
</blockquote>
<p><img src="http://ocny4dbvb.bkt.clouddn.com/hexo%E5%8D%9A%E5%AE%A2g%E5%91%BD%E4%BB%A4.png" alt="hexo g"></p>
<p>接着执行:</p>
<blockquote>
<p>hexo s</p>
</blockquote>
<p><img src="http://ocny4dbvb.bkt.clouddn.com/hexo%E5%8D%9A%E5%AE%A2g%E5%91%BD%E4%BB%A4.png" alt="hexo s"></p>
<p>然后在浏览器中输入<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>可以看到如下页面就表示博客已经搭建成功。</p>
<p><img src="http://ocny4dbvb.bkt.clouddn.com/hexo%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F9.png" alt="本地主页"></p>
<h1 id="部署到GitHub-Pages"><a href="#部署到GitHub-Pages" class="headerlink" title="部署到GitHub Pages"></a>部署到GitHub Pages</h1><p>这一步其实很简单，打开blog文件夹下的_config.yml文件，找到文件的末尾，修改deploy如下：</p>
<pre><code>deploy:
    type: git
    repo: https://github.com/maintel/yourname.github.io.git
    branch: master
</code></pre><p><strong>注意</strong></p>
<p>yaml语法比较严格，请检查关键字冒号后面的<strong>空格</strong>一定要有</p>
<p><img src="http://ocny4dbvb.bkt.clouddn.com/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E9%83%A8%E7%BD%B2%E5%88%B0github.png" alt="部署到github"></p>
<p>上面repo的地址其实就是上面搭建github工程得到的地址。</p>
<p>然后执行命令进行部署：</p>
<blockquote>
<p>hexo g</p>
<p>hexo d</p>
</blockquote>
<p>等待执行完成，访问<a href="https://yourname.github.io" target="_blank" rel="external">https://yourname.github.io</a> 就能看到和上面本地部署时一样的主页。</p>
<h2 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h2><p><strong>出现<code>ERROR Deployer not found: git</code>错误</strong></p>
<p>重新执行如下命令然后再重新部署即可：</p>
<blockquote>
<p>npm install hexo-deployer-git –save</p>
</blockquote>
<p><strong>访问<a href="https://yourname.github.io" target="_blank" rel="external">https://yourname.github.io</a> 出现404错误</strong></p>
<p>首先打开github工程<code>setting</code>下拉找到<code>GitHub Pages</code>如下:</p>
<p><img src="http://ocny4dbvb.bkt.clouddn.com/github%20pages%20setting.png" alt="github Pages 配置"></p>
<p>选择<code>Source</code>下的选项选择主分支即可。如下：</p>
<p><img src="http://ocny4dbvb.bkt.clouddn.com/%E9%80%89%E6%8B%A9source.png" alt="选择主分支作为源码"></p>
<p>至此，基于Hexo的博客已经基本搭建完成，剩下的新建以及发布博客、选择主题和绑定域名等个性化的东西，抽空会在下一篇具体说明。</p>
<p>参考资料：</p>
<ul>
<li><a href="http://blog.csdn.net/jzooo/article/details/46781805" target="_blank" rel="external">零基础免费搭建个人博客-hexo+github</a></li>
<li><a href="http://www.ezlippi.com//blog/2016/02/jekyll-to-hexo.html" target="_blank" rel="external">Jekyll迁移到Hexo搭建个人博客</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;折腾了一下午终于将Hexo博客成功跑起来，觉得还是蛮不错的，就把整个搭建踩坑的过程写下来，希望有用。&lt;/p&gt;
&lt;h1 id=&quot;关于GitHub-Pages&quot;&gt;&lt;a href=&quot;#关于GitHub-Pages&quot; class=&quot;headerlink&quot; title=&quot;关于GitH
    
    </summary>
    
      <category term="hexo" scheme="https://maintel.github.io/categories/hexo/"/>
    
    
      <category term="Hexo" scheme="https://maintel.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
